import re

# Function to check password complexity
def check_password_strength(password):
    # Initialize the strength score
    strength_score = 0
    feedback = []

    # Length Check
    if len(password) >= 8:
        strength_score += 1
    else:
        feedback.append("Password should be at least 8 characters long.")

    # Uppercase Check
    if re.search(r'[A-Z]', password):
        strength_score += 1
    else:
        feedback.append("Password should include at least one uppercase letter.")

    # Lowercase Check
    if re.search(r'[a-z]', password):
        strength_score += 1
    else:
        feedback.append("Password should include at least one lowercase letter.")

    # Numeric Check
    if re.search(r'[0-9]', password):
        strength_score += 1
    else:
        feedback.append("Password should include at least one digit.")

    # Special Character Check
    if re.search(r'[!@#$%^&*(),.?":{}|<>]', password):
        strength_score += 1
    else:
        feedback.append("Password should include at least one special character.")

    # Assess strength level based on score
    if strength_score == 5:
        strength_level = "Strong"
        feedback.append("Your password is strong.")
    elif 3 <= strength_score < 5:
        strength_level = "Moderate"
        feedback.append("Your password is moderate. Consider adding more complexity.")
    else:
        strength_level = "Weak"
        feedback.append("Your password is weak. Consider adding more complexity.")

    return strength_level, feedback

# Main program
def main():
    print("Password Complexity Checker")
    password = input("Enter your password: ")

    # Check password strength
    strength_level, feedback = check_password_strength(password)

    # Display the result
    print(f"\nPassword Strength: {strength_level}")
    print("Feedback:")
    for item in feedback:
        print(f"- {item}")

# Run the program
if __name__ == "__main__":
    main()
